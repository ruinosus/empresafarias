//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GUI.Relatorios {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRelatorioTitular")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsRelatorioTitular : global::System.Data.DataSet {
        
        private dtaRelatorioTitularDataTable tabledtaRelatorioTitular;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsRelatorioTitular() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsRelatorioTitular(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtaRelatorioTitular"] != null)) {
                    base.Tables.Add(new dtaRelatorioTitularDataTable(ds.Tables["dtaRelatorioTitular"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtaRelatorioTitularDataTable dtaRelatorioTitular {
            get {
                return this.tabledtaRelatorioTitular;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsRelatorioTitular cln = ((dsRelatorioTitular)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtaRelatorioTitular"] != null)) {
                    base.Tables.Add(new dtaRelatorioTitularDataTable(ds.Tables["dtaRelatorioTitular"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtaRelatorioTitular = ((dtaRelatorioTitularDataTable)(base.Tables["dtaRelatorioTitular"]));
            if ((initTable == true)) {
                if ((this.tabledtaRelatorioTitular != null)) {
                    this.tabledtaRelatorioTitular.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsRelatorioTitular";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRelatorioTitular.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtaRelatorioTitular = new dtaRelatorioTitularDataTable();
            base.Tables.Add(this.tabledtaRelatorioTitular);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtaRelatorioTitular() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRelatorioTitular ds = new dsRelatorioTitular();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtaRelatorioTitularRowChangeEventHandler(object sender, dtaRelatorioTitularRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtaRelatorioTitularDataTable : global::System.Data.TypedTableBase<dtaRelatorioTitularRow> {
            
            private global::System.Data.DataColumn columnDataVencimento;
            
            private global::System.Data.DataColumn columnSigla;
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnPlano;
            
            private global::System.Data.DataColumn columnValorPadrao;
            
            private global::System.Data.DataColumn columnValor;
            
            private global::System.Data.DataColumn columnCidade;
            
            private global::System.Data.DataColumn columnDependente;
            
            private global::System.Data.DataColumn columnReligiaoDependente;
            
            private global::System.Data.DataColumn columnNascimentoDependente;
            
            private global::System.Data.DataColumn columnParentesco;
            
            private global::System.Data.DataColumn columnTitular;
            
            private global::System.Data.DataColumn columnReligiaoTitular;
            
            private global::System.Data.DataColumn columnNascimentoTitular;
            
            private global::System.Data.DataColumn columnSexo;
            
            private global::System.Data.DataColumn columnEstadoCivil;
            
            private global::System.Data.DataColumn columnCpf;
            
            private global::System.Data.DataColumn columnLogradouro;
            
            private global::System.Data.DataColumn columnNumero;
            
            private global::System.Data.DataColumn columnComplemento;
            
            private global::System.Data.DataColumn columnBairro;
            
            private global::System.Data.DataColumn columnCep;
            
            private global::System.Data.DataColumn columnTelefoneResidencial;
            
            private global::System.Data.DataColumn columnTelefoneCelular;
            
            private global::System.Data.DataColumn columnRg;
            
            private global::System.Data.DataColumn columnDataExpedicao;
            
            private global::System.Data.DataColumn columnOrgaoExpeditor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularDataTable() {
                this.TableName = "dtaRelatorioTitular";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtaRelatorioTitularDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtaRelatorioTitularDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataVencimentoColumn {
                get {
                    return this.columnDataVencimento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiglaColumn {
                get {
                    return this.columnSigla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlanoColumn {
                get {
                    return this.columnPlano;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorPadraoColumn {
                get {
                    return this.columnValorPadrao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CidadeColumn {
                get {
                    return this.columnCidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DependenteColumn {
                get {
                    return this.columnDependente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReligiaoDependenteColumn {
                get {
                    return this.columnReligiaoDependente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NascimentoDependenteColumn {
                get {
                    return this.columnNascimentoDependente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParentescoColumn {
                get {
                    return this.columnParentesco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitularColumn {
                get {
                    return this.columnTitular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReligiaoTitularColumn {
                get {
                    return this.columnReligiaoTitular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NascimentoTitularColumn {
                get {
                    return this.columnNascimentoTitular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexoColumn {
                get {
                    return this.columnSexo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EstadoCivilColumn {
                get {
                    return this.columnEstadoCivil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CpfColumn {
                get {
                    return this.columnCpf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogradouroColumn {
                get {
                    return this.columnLogradouro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ComplementoColumn {
                get {
                    return this.columnComplemento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BairroColumn {
                get {
                    return this.columnBairro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CepColumn {
                get {
                    return this.columnCep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefoneResidencialColumn {
                get {
                    return this.columnTelefoneResidencial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelefoneCelularColumn {
                get {
                    return this.columnTelefoneCelular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RgColumn {
                get {
                    return this.columnRg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataExpedicaoColumn {
                get {
                    return this.columnDataExpedicao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrgaoExpeditorColumn {
                get {
                    return this.columnOrgaoExpeditor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularRow this[int index] {
                get {
                    return ((dtaRelatorioTitularRow)(this.Rows[index]));
                }
            }
            
            public event dtaRelatorioTitularRowChangeEventHandler dtaRelatorioTitularRowChanging;
            
            public event dtaRelatorioTitularRowChangeEventHandler dtaRelatorioTitularRowChanged;
            
            public event dtaRelatorioTitularRowChangeEventHandler dtaRelatorioTitularRowDeleting;
            
            public event dtaRelatorioTitularRowChangeEventHandler dtaRelatorioTitularRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtaRelatorioTitularRow(dtaRelatorioTitularRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularRow AdddtaRelatorioTitularRow(
                        System.DateTime DataVencimento, 
                        string Sigla, 
                        int Id, 
                        string Plano, 
                        decimal ValorPadrao, 
                        decimal Valor, 
                        string Cidade, 
                        string Dependente, 
                        string ReligiaoDependente, 
                        System.DateTime NascimentoDependente, 
                        string Parentesco, 
                        string Titular, 
                        string ReligiaoTitular, 
                        System.DateTime NascimentoTitular, 
                        string Sexo, 
                        string EstadoCivil, 
                        string Cpf, 
                        string Logradouro, 
                        string Numero, 
                        string Complemento, 
                        string Bairro, 
                        string Cep, 
                        string TelefoneResidencial, 
                        string TelefoneCelular, 
                        string Rg, 
                        System.DateTime DataExpedicao, 
                        string OrgaoExpeditor) {
                dtaRelatorioTitularRow rowdtaRelatorioTitularRow = ((dtaRelatorioTitularRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DataVencimento,
                        Sigla,
                        Id,
                        Plano,
                        ValorPadrao,
                        Valor,
                        Cidade,
                        Dependente,
                        ReligiaoDependente,
                        NascimentoDependente,
                        Parentesco,
                        Titular,
                        ReligiaoTitular,
                        NascimentoTitular,
                        Sexo,
                        EstadoCivil,
                        Cpf,
                        Logradouro,
                        Numero,
                        Complemento,
                        Bairro,
                        Cep,
                        TelefoneResidencial,
                        TelefoneCelular,
                        Rg,
                        DataExpedicao,
                        OrgaoExpeditor};
                rowdtaRelatorioTitularRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtaRelatorioTitularRow);
                return rowdtaRelatorioTitularRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularRow FindById(int Id) {
                return ((dtaRelatorioTitularRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtaRelatorioTitularDataTable cln = ((dtaRelatorioTitularDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtaRelatorioTitularDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDataVencimento = base.Columns["DataVencimento"];
                this.columnSigla = base.Columns["Sigla"];
                this.columnId = base.Columns["Id"];
                this.columnPlano = base.Columns["Plano"];
                this.columnValorPadrao = base.Columns["ValorPadrao"];
                this.columnValor = base.Columns["Valor"];
                this.columnCidade = base.Columns["Cidade"];
                this.columnDependente = base.Columns["Dependente"];
                this.columnReligiaoDependente = base.Columns["ReligiaoDependente"];
                this.columnNascimentoDependente = base.Columns["NascimentoDependente"];
                this.columnParentesco = base.Columns["Parentesco"];
                this.columnTitular = base.Columns["Titular"];
                this.columnReligiaoTitular = base.Columns["ReligiaoTitular"];
                this.columnNascimentoTitular = base.Columns["NascimentoTitular"];
                this.columnSexo = base.Columns["Sexo"];
                this.columnEstadoCivil = base.Columns["EstadoCivil"];
                this.columnCpf = base.Columns["Cpf"];
                this.columnLogradouro = base.Columns["Logradouro"];
                this.columnNumero = base.Columns["Numero"];
                this.columnComplemento = base.Columns["Complemento"];
                this.columnBairro = base.Columns["Bairro"];
                this.columnCep = base.Columns["Cep"];
                this.columnTelefoneResidencial = base.Columns["TelefoneResidencial"];
                this.columnTelefoneCelular = base.Columns["TelefoneCelular"];
                this.columnRg = base.Columns["Rg"];
                this.columnDataExpedicao = base.Columns["DataExpedicao"];
                this.columnOrgaoExpeditor = base.Columns["OrgaoExpeditor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDataVencimento = new global::System.Data.DataColumn("DataVencimento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataVencimento);
                this.columnSigla = new global::System.Data.DataColumn("Sigla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSigla);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnPlano = new global::System.Data.DataColumn("Plano", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlano);
                this.columnValorPadrao = new global::System.Data.DataColumn("ValorPadrao", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValorPadrao);
                this.columnValor = new global::System.Data.DataColumn("Valor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor);
                this.columnCidade = new global::System.Data.DataColumn("Cidade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCidade);
                this.columnDependente = new global::System.Data.DataColumn("Dependente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDependente);
                this.columnReligiaoDependente = new global::System.Data.DataColumn("ReligiaoDependente", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReligiaoDependente);
                this.columnNascimentoDependente = new global::System.Data.DataColumn("NascimentoDependente", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNascimentoDependente);
                this.columnParentesco = new global::System.Data.DataColumn("Parentesco", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParentesco);
                this.columnTitular = new global::System.Data.DataColumn("Titular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitular);
                this.columnReligiaoTitular = new global::System.Data.DataColumn("ReligiaoTitular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReligiaoTitular);
                this.columnNascimentoTitular = new global::System.Data.DataColumn("NascimentoTitular", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNascimentoTitular);
                this.columnSexo = new global::System.Data.DataColumn("Sexo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexo);
                this.columnEstadoCivil = new global::System.Data.DataColumn("EstadoCivil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstadoCivil);
                this.columnCpf = new global::System.Data.DataColumn("Cpf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCpf);
                this.columnLogradouro = new global::System.Data.DataColumn("Logradouro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogradouro);
                this.columnNumero = new global::System.Data.DataColumn("Numero", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumero);
                this.columnComplemento = new global::System.Data.DataColumn("Complemento", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplemento);
                this.columnBairro = new global::System.Data.DataColumn("Bairro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBairro);
                this.columnCep = new global::System.Data.DataColumn("Cep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCep);
                this.columnTelefoneResidencial = new global::System.Data.DataColumn("TelefoneResidencial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefoneResidencial);
                this.columnTelefoneCelular = new global::System.Data.DataColumn("TelefoneCelular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelefoneCelular);
                this.columnRg = new global::System.Data.DataColumn("Rg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRg);
                this.columnDataExpedicao = new global::System.Data.DataColumn("DataExpedicao", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataExpedicao);
                this.columnOrgaoExpeditor = new global::System.Data.DataColumn("OrgaoExpeditor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgaoExpeditor);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnDataVencimento.AllowDBNull = false;
                this.columnSigla.AllowDBNull = false;
                this.columnSigla.MaxLength = 2;
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnPlano.AllowDBNull = false;
                this.columnPlano.MaxLength = 50;
                this.columnValorPadrao.AllowDBNull = false;
                this.columnValor.AllowDBNull = false;
                this.columnCidade.AllowDBNull = false;
                this.columnCidade.MaxLength = 50;
                this.columnDependente.AllowDBNull = false;
                this.columnDependente.MaxLength = 50;
                this.columnReligiaoDependente.AllowDBNull = false;
                this.columnReligiaoDependente.MaxLength = 50;
                this.columnNascimentoDependente.AllowDBNull = false;
                this.columnParentesco.AllowDBNull = false;
                this.columnParentesco.MaxLength = 30;
                this.columnTitular.AllowDBNull = false;
                this.columnTitular.MaxLength = 50;
                this.columnReligiaoTitular.AllowDBNull = false;
                this.columnReligiaoTitular.MaxLength = 50;
                this.columnNascimentoTitular.AllowDBNull = false;
                this.columnSexo.AllowDBNull = false;
                this.columnSexo.MaxLength = 1;
                this.columnEstadoCivil.AllowDBNull = false;
                this.columnEstadoCivil.MaxLength = 30;
                this.columnCpf.MaxLength = 11;
                this.columnLogradouro.AllowDBNull = false;
                this.columnLogradouro.MaxLength = 50;
                this.columnNumero.AllowDBNull = false;
                this.columnNumero.MaxLength = 10;
                this.columnComplemento.AllowDBNull = false;
                this.columnComplemento.MaxLength = 50;
                this.columnBairro.AllowDBNull = false;
                this.columnBairro.MaxLength = 50;
                this.columnCep.AllowDBNull = false;
                this.columnCep.MaxLength = 10;
                this.columnTelefoneResidencial.MaxLength = 15;
                this.columnTelefoneCelular.MaxLength = 15;
                this.columnRg.MaxLength = 7;
                this.columnOrgaoExpeditor.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularRow NewdtaRelatorioTitularRow() {
                return ((dtaRelatorioTitularRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtaRelatorioTitularRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtaRelatorioTitularRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtaRelatorioTitularRowChanged != null)) {
                    this.dtaRelatorioTitularRowChanged(this, new dtaRelatorioTitularRowChangeEvent(((dtaRelatorioTitularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtaRelatorioTitularRowChanging != null)) {
                    this.dtaRelatorioTitularRowChanging(this, new dtaRelatorioTitularRowChangeEvent(((dtaRelatorioTitularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtaRelatorioTitularRowDeleted != null)) {
                    this.dtaRelatorioTitularRowDeleted(this, new dtaRelatorioTitularRowChangeEvent(((dtaRelatorioTitularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtaRelatorioTitularRowDeleting != null)) {
                    this.dtaRelatorioTitularRowDeleting(this, new dtaRelatorioTitularRowChangeEvent(((dtaRelatorioTitularRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtaRelatorioTitularRow(dtaRelatorioTitularRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRelatorioTitular ds = new dsRelatorioTitular();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtaRelatorioTitularDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtaRelatorioTitularRow : global::System.Data.DataRow {
            
            private dtaRelatorioTitularDataTable tabledtaRelatorioTitular;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtaRelatorioTitularRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtaRelatorioTitular = ((dtaRelatorioTitularDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataVencimento {
                get {
                    return ((global::System.DateTime)(this[this.tabledtaRelatorioTitular.DataVencimentoColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.DataVencimentoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sigla {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.SiglaColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.SiglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tabledtaRelatorioTitular.IdColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Plano {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.PlanoColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.PlanoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ValorPadrao {
                get {
                    return ((decimal)(this[this.tabledtaRelatorioTitular.ValorPadraoColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.ValorPadraoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Valor {
                get {
                    return ((decimal)(this[this.tabledtaRelatorioTitular.ValorColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.ValorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cidade {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.CidadeColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.CidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dependente {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.DependenteColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.DependenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReligiaoDependente {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.ReligiaoDependenteColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.ReligiaoDependenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NascimentoDependente {
                get {
                    return ((global::System.DateTime)(this[this.tabledtaRelatorioTitular.NascimentoDependenteColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.NascimentoDependenteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Parentesco {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.ParentescoColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.ParentescoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Titular {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.TitularColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.TitularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReligiaoTitular {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.ReligiaoTitularColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.ReligiaoTitularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NascimentoTitular {
                get {
                    return ((global::System.DateTime)(this[this.tabledtaRelatorioTitular.NascimentoTitularColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.NascimentoTitularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sexo {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.SexoColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.SexoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EstadoCivil {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.EstadoCivilColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.EstadoCivilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cpf {
                get {
                    try {
                        return ((string)(this[this.tabledtaRelatorioTitular.CpfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cpf\' in table \'dtaRelatorioTitular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtaRelatorioTitular.CpfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Logradouro {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.LogradouroColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.LogradouroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Numero {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.NumeroColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.NumeroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Complemento {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.ComplementoColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.ComplementoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bairro {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.BairroColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.BairroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Cep {
                get {
                    return ((string)(this[this.tabledtaRelatorioTitular.CepColumn]));
                }
                set {
                    this[this.tabledtaRelatorioTitular.CepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelefoneResidencial {
                get {
                    try {
                        return ((string)(this[this.tabledtaRelatorioTitular.TelefoneResidencialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TelefoneResidencial\' in table \'dtaRelatorioTitular\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledtaRelatorioTitular.TelefoneResidencialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelefoneCelular {
                get {
                    try {
                        return ((string)(this[this.tabledtaRelatorioTitular.TelefoneCelularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TelefoneCelular\' in table \'dtaRelatorioTitular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtaRelatorioTitular.TelefoneCelularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rg {
                get {
                    try {
                        return ((string)(this[this.tabledtaRelatorioTitular.RgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rg\' in table \'dtaRelatorioTitular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtaRelatorioTitular.RgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DataExpedicao {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtaRelatorioTitular.DataExpedicaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataExpedicao\' in table \'dtaRelatorioTitular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtaRelatorioTitular.DataExpedicaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrgaoExpeditor {
                get {
                    try {
                        return ((string)(this[this.tabledtaRelatorioTitular.OrgaoExpeditorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgaoExpeditor\' in table \'dtaRelatorioTitular\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtaRelatorioTitular.OrgaoExpeditorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCpfNull() {
                return this.IsNull(this.tabledtaRelatorioTitular.CpfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCpfNull() {
                this[this.tabledtaRelatorioTitular.CpfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefoneResidencialNull() {
                return this.IsNull(this.tabledtaRelatorioTitular.TelefoneResidencialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefoneResidencialNull() {
                this[this.tabledtaRelatorioTitular.TelefoneResidencialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelefoneCelularNull() {
                return this.IsNull(this.tabledtaRelatorioTitular.TelefoneCelularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelefoneCelularNull() {
                this[this.tabledtaRelatorioTitular.TelefoneCelularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRgNull() {
                return this.IsNull(this.tabledtaRelatorioTitular.RgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRgNull() {
                this[this.tabledtaRelatorioTitular.RgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataExpedicaoNull() {
                return this.IsNull(this.tabledtaRelatorioTitular.DataExpedicaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataExpedicaoNull() {
                this[this.tabledtaRelatorioTitular.DataExpedicaoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrgaoExpeditorNull() {
                return this.IsNull(this.tabledtaRelatorioTitular.OrgaoExpeditorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrgaoExpeditorNull() {
                this[this.tabledtaRelatorioTitular.OrgaoExpeditorColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtaRelatorioTitularRowChangeEvent : global::System.EventArgs {
            
            private dtaRelatorioTitularRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularRowChangeEvent(dtaRelatorioTitularRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtaRelatorioTitularRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GUI.Relatorios.dsRelatorioTitularTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class dtaRelatorioTitularTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dtaRelatorioTitularTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "dtaRelatorioTitular";
            tableMapping.ColumnMappings.Add("DataVencimento", "DataVencimento");
            tableMapping.ColumnMappings.Add("Sigla", "Sigla");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Plano", "Plano");
            tableMapping.ColumnMappings.Add("ValorPadrao", "ValorPadrao");
            tableMapping.ColumnMappings.Add("Valor", "Valor");
            tableMapping.ColumnMappings.Add("Cidade", "Cidade");
            tableMapping.ColumnMappings.Add("Dependente", "Dependente");
            tableMapping.ColumnMappings.Add("ReligiaoDependente", "ReligiaoDependente");
            tableMapping.ColumnMappings.Add("NascimentoDependente", "NascimentoDependente");
            tableMapping.ColumnMappings.Add("Parentesco", "Parentesco");
            tableMapping.ColumnMappings.Add("Titular", "Titular");
            tableMapping.ColumnMappings.Add("ReligiaoTitular", "ReligiaoTitular");
            tableMapping.ColumnMappings.Add("NascimentoTitular", "NascimentoTitular");
            tableMapping.ColumnMappings.Add("Sexo", "Sexo");
            tableMapping.ColumnMappings.Add("EstadoCivil", "EstadoCivil");
            tableMapping.ColumnMappings.Add("Cpf", "Cpf");
            tableMapping.ColumnMappings.Add("Logradouro", "Logradouro");
            tableMapping.ColumnMappings.Add("Numero", "Numero");
            tableMapping.ColumnMappings.Add("Complemento", "Complemento");
            tableMapping.ColumnMappings.Add("Bairro", "Bairro");
            tableMapping.ColumnMappings.Add("Cep", "Cep");
            tableMapping.ColumnMappings.Add("TelefoneResidencial", "TelefoneResidencial");
            tableMapping.ColumnMappings.Add("TelefoneCelular", "TelefoneCelular");
            tableMapping.ColumnMappings.Add("Rg", "Rg");
            tableMapping.ColumnMappings.Add("DataExpedicao", "DataExpedicao");
            tableMapping.ColumnMappings.Add("OrgaoExpeditor", "OrgaoExpeditor");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GUI.Properties.Settings.Default.DBEmpresaFariasConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Parcela.DataVencimento, Estados.Sigla, Contrato.Id, Plano.Nome AS Plano, Plano.ValorPadrao, Parcela.Valor, Cidades.Nome AS Cidade, 
                         Dependente.Nome AS Dependente, Dependente.Religiao AS ReligiaoDependente, Dependente.DataNascimento AS NascimentoDependente, Dependente.Parentesco, 
                         Titular.Nome AS Titular, Titular.Religiao AS ReligiaoTitular, Titular.DataNascimento AS NascimentoTitular, Titular.Sexo, Titular.EstadoCivil, Titular.Cpf, 
                         Titular.Logradouro, Titular.Numero, Titular.Complemento, Titular.Bairro, Titular.Cep, Titular.TelefoneResidencial, Titular.TelefoneCelular, Titular.Rg, 
                         Titular.DataExpedicao, Titular.OrgaoExpeditor
FROM            Cidades INNER JOIN
                         Contrato ON Cidades.Id = Contrato.Id INNER JOIN
                         Dependente ON Cidades.Id = Dependente.Id INNER JOIN
                         Estados ON Cidades.EstadoId = Estados.Id INNER JOIN
                         Parcela ON Contrato.Id = Parcela.ContratoId INNER JOIN
                         Plano ON Contrato.PlanoId = Plano.Id INNER JOIN
                         Titular ON Cidades.Id = Titular.CidadeEnderecoId AND Cidades.Id = Titular.CidadeNaturalidadeId AND Contrato.TitularId = Titular.Id AND 
                         Dependente.TitularId = Titular.Id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRelatorioTitular.dtaRelatorioTitularDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRelatorioTitular.dtaRelatorioTitularDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsRelatorioTitular.dtaRelatorioTitularDataTable dataTable = new dsRelatorioTitular.dtaRelatorioTitularDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dsRelatorioTitular dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dsRelatorioTitular dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dsRelatorioTitular dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dsRelatorioTitular dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591